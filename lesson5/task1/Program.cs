// ЗАДАЧА № 1
// Вычислить факториал от натурального
// числа N

// Факториал:
// N! = 1*2*...*N

// Пример:
// 3! = 1*2*3 = 6
// 5! = 1*2*3*4*5 = 120
// 10! = 3 628 800
// 1! = 1
// 0! = 1

// Этапы создания Рекурсии:
// 1.Рекурсивный вызов(N - 1) - Более простая задача
// в формуле вычесления фактория переставим сомножители наоборот:
// N! = N* (N - 1)*...*1

// 2. Условие остановки рекурсии.
// N! = N* (N - 1) !
// 3! = 3 * 2!
// 2! = 2 * 1!
// 1! = 1



int Fact(int n)
{
    if (n == 1 || n == 0 ) // Условие остановки рекурсии(когда фак-л = 1)()
    {
        Console.WriteLine($"Stop: {n}");// Добавим отладочный вывод(чтобы понять, что мы попали в условие If)
        return 1;
    }
    Console.WriteLine(n); // отладочный вывод(добавили чтобы выдеть последовательность значений параметров от 5 до 1)
    return n * Fact(n - 1); //вернем в качестве знач-я ф-ю
}

Console.Write(Fact(5));

// отладка
// F11 шаг с заходом(если на пути отладчик встречается ф-я, то он заходит в тело ф-ии)
// F10 шаг с обходм(если на пути отладчик встречается ф-я, то он обходит ф-ю, и переходи к следующей инструкции)
// F5 продолжить




// ДЗ
// Добавить в код отладочный вывод, который позволит увидеть
// раскручивание рекурсии, т.е. процесс возврата к местам рекурсивного вызова на строке 28(tk 43мин)
// прмер:
// Возврат:n=2, fact=1
// подсказка:
// вероятно придется разделить инструкцию на строке 28 на составные части


//Рекурсию для вычесления фак-ла на практике не используется
// решение фак-ла с помощью цикла for:


int Fact(int n)
{
    int result = 1;
    for(int i =2; i <= n; i++)
    {
        result *=i;
    }
    return result;
}